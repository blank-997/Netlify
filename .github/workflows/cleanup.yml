# 自动清理过期IP记录

name: 清理过期IP记录

on:
  schedule:
    - cron: '0 2 * * *'  # 每天UTC 2:00运行
  
  # 手动触发
  workflow_dispatch:
    inputs:
      dry_run:
        description: '仅预览清理结果，不实际删除'
        required: false
        default: 'false'
        type: boolean

jobs:
  cleanup:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Node.js环境
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 安装依赖
      run: npm install node-fetch
        
    - name: 运行清理脚本
      env:
        GITHUB_TOKEN: ${{ secrets.CLEANUP_TOKEN }}
        GITHUB_OWNER: ${{ secrets.DB_OWNER }}
        GITHUB_REPO: ${{ secrets.DB_REPO }}
        DRY_RUN: ${{ github.event.inputs.dry_run || 'false' }}
      run: |
        echo "开始清理过期IP记录..."
        echo "目标仓库: $GITHUB_OWNER/$GITHUB_REPO"
        echo "预览模式: $DRY_RUN"
        
        if [ "$DRY_RUN" = "true" ]; then
          echo "=== 预览模式 - 不会实际删除记录 ==="
          node -e "
            const { CleanupService } = require('./scripts/cleanup.js');
            const config = {
              github: {
                owner: process.env.GITHUB_OWNER,
                repo: process.env.GITHUB_REPO,
                token: process.env.GITHUB_TOKEN,
                branch: 'main'
              },
              retentionDays: 15
            };
            
            (async () => {
              const cleanup = new CleanupService(config);
              const stats = await cleanup.getCleanupStats();
              console.log('当前统计信息:', stats);
              
              if (stats.expiredRecords > 0) {
                console.log('\\n预览: 将删除', stats.expiredRecords, '条过期记录');
                console.log('预览: 将保留', stats.validRecords, '条有效记录');
              } else {
                console.log('\\n没有过期记录需要清理');
              }
            })().catch(console.error);
          "
        else
          echo "=== 执行清理 ==="
          node scripts/cleanup.js
        fi
        
    - name: 清理结果通知
      if: always()
      run: |
        echo "清理任务完成"
        echo "时间: $(date)"
        echo "仓库: ${{ secrets.DB_OWNER }}/${{ secrets.DB_REPO }}"
